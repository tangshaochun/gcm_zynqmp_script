#!/usr/bin/env python
from __future__ import print_function
import sys

from periphery import I2C
from constants import *

def minipod_reg_wr(i2c_bus_addr,dev_addr,page_addr,reg_addr,reg_value):
  i2c = I2C("/dev/i2c-1")
  i2c.transfer(TCA9548_U93_ADDR, [I2C.Message([i2c_bus_addr])]) # select I2C Bus
  i2c.transfer(dev_addr, [I2C.Message([127,page_addr])]) # set the page
  i2c.transfer(dev_addr, [I2C.Message([reg_addr,reg_value])]) # write to reg_addr
  i2c.close()

def minipod_reg_rd(i2c_bus_addr,dev_addr,page_addr,reg_addr):
  i2c = I2C("/dev/i2c-1")
  i2c.transfer(TCA9548_U93_ADDR, [I2C.Message([i2c_bus_addr])]) # select i2c bus

  read = I2C.Message([0x0], read=True)
  i2c.transfer(dev_addr, [I2C.Message([127,page_addr])]) # set the page
  i2c.transfer(dev_addr, [I2C.Message([reg_addr])])      # set reg_addr
  i2c.transfer(dev_addr, [read])
  i2c.close()

  print('read back is 0x{0:x}' .format(read.data[0]))
  return read.data[0]

if len(sys.argv) != 5 or len(sys.argv) != 6:
  print('Must call this script like so:')
  print('  - Read:  {0} i2c_bus_addr device_addr page register_addr'.format(sys.argv[0]))
  print('  - Write: {0} i2c_bus_addr device_addr page register_addr register_value'.format(sys.argv[0]))
  sys.exit(1)

i2c_bus_addr = int(sys.argv[1], 16)
dev_addr = int(sys.argv[2], 16)
page_addr = int(sys.argv[3], 16)
reg_addr = int(sys.argv[4], 16)
print('i2c_bus_addr: {0:x}'.format(i2c_bus_addr))
print('dev_addr:     {0:x}'.format(dev_addr))
print('page_addr:    {0:x}'.format(page_addr))
print('reg_addr:     {0:x}'.format(reg_addr))

if len(sys.argv) == 5:
  reg_value = minipod_reg_rd(i2c_bus_addr, dev_addr, page_addr, reg_addr)
  print('reg_value:    {0:x}'.format(reg_value))
  sys.exit(0)

if len(sys.argv) == 6:
  reg_value = int(sys.argv[5], 16)
  print('reg_value:    {0:x}'.format(reg_value))
  minipod_reg_wr(i2c_bus_addr, dev_addr, page_addr, reg_addr, reg_value)
  read_back = minipod_reg_rd(i2c_bus_addr, dev_addr, page_addr, reg_addr)
  print('read back:    {0:x}'.format(read_back))
  sys.exit(0)
